<UserControl x:Class="MotoiCal.Views.Settings.SettingsContentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MotoiCal.Views.Settings"
             mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <ToggleButton Grid.Column="0" Grid.Row="0" 
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="Moto 2"
                      IsChecked="{Binding IsMoto2Saved}"
                      Visibility="{Binding IsMoto2Visible, Converter={StaticResource bool2VisibilityConverter}}"/>
        <ToggleButton Grid.Column="1" Grid.Row="0" 
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="Moto 3"
                      IsChecked="{Binding IsMoto3Saved}"
                      Visibility="{Binding IsMoto3Visible, Converter={StaticResource bool2VisibilityConverter}}"/>
        <ToggleButton Grid.Column="0" Grid.Row="1" 
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="Practice Session"
                      IsChecked="{Binding IsPracticeSaved}"/>
        <ToggleButton Grid.Column="1" Grid.Row="1"
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="Qualifying Session"
                      IsChecked="{Binding IsQualifyingSaved}"
                      Visibility="{Binding IsQualifyingVisible, Converter={StaticResource bool2VisibilityConverter}}"/>
        <ToggleButton Grid.Column="0" Grid.Row="2" 
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="Superpole Session"
                      IsChecked="{Binding IsSuperpoleSaved}"
                      Visibility="{Binding IsSuperpoleVisible, Converter={StaticResource bool2VisibilityConverter}}"/>
        <ToggleButton Grid.Column="1" Grid.Row="2" 
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="Warm Up Session"
                      IsChecked="{Binding IsWarmUpSaved}"
                      Visibility="{Binding IsWarmupVisible, Converter={StaticResource bool2VisibilityConverter}}"/>
        <ToggleButton Grid.Column="0" Grid.Row="3" 
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="Race Session"
                      IsChecked="{Binding IsRaceSaved}"/>
        <ToggleButton Grid.Column="0" Grid.Row="4" 
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="Behind the Scenes"
                      IsChecked="{Binding IsBehindTheScenesSaved}"
                      Visibility="{Binding IsBehindTheScenesVisible, Converter={StaticResource bool2VisibilityConverter}}"/>
        <ToggleButton Grid.Column="1" Grid.Row="4" 
                      Margin="20,20,20,20"
                      Style="{StaticResource ToggleButtonStyle1}"
                      Content="After The Flag"
                      IsChecked="{Binding IsAfterTheFlagSaved}"
                      Visibility="{Binding IsAfterTheFlagVisible, Converter={StaticResource bool2VisibilityConverter}}"/>

        <StackPanel Grid.Column="0" Grid.Row="5"
                    Margin="20,20,20,20">
            <ToggleButton x:Name="EventTrigger"
                          Style="{StaticResource ToggleButtonStyle1}"
                          Content="Event Reminder"
                          IsChecked="{Binding IsEventReminderActive}"/>
        </StackPanel>
        
        <StackPanel Grid.Column="1" Grid.Row="5"
                    Margin="20,20,20,20"
                    IsEnabled="{Binding IsEventIntervalButtonEnabled}">
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource WindowButtonStyle}"
                        Content="{Binding AtEventButtonStatus.Name}"
                        ToolTip="{Binding AtEventButtonStatus.ToolTip}"
                        Command="{Binding AtEventCommand}"
                        Margin="0,0,5,0"
                        FontSize="14"
                        Foreground="{Binding AtEventButtonStatus.ButtonActive, Converter={StaticResource bool2RGBConverter}}"
                        HorizontalAlignment="Left"/>
                <Button Style="{StaticResource WindowButtonStyle}"
                        Content="{Binding Minutes5EventButtonStatus.Name}"
                        ToolTip="{Binding Minutes5EventButtonStatus.ToolTip}"
                        Command="{Binding  Minutes5EventCommand}"                        
                        Margin="0,0,5,0"
                        FontSize="14"
                        Foreground="{Binding Minutes5EventButtonStatus.ButtonActive, Converter={StaticResource bool2RGBConverter}}"
                        HorizontalAlignment="Left"/>
                <Button Style="{StaticResource WindowButtonStyle}"
                        Content="{Binding Minutes15EventButtonStatus.Name}"
                        ToolTip="{Binding Minutes15EventButtonStatus.ToolTip}"
                        Command="{Binding Minutes15EventCommand}"                        
                        Margin="0,0,5,0"
                        FontSize="14"
                        Foreground="{Binding Minutes15EventButtonStatus.ButtonActive, Converter={StaticResource bool2RGBConverter}}"
                        HorizontalAlignment="Left"/>
                <Button Style="{StaticResource WindowButtonStyle}"
                        Content="{Binding Minutes30EventButtonStatus.Name}"
                        ToolTip="{Binding Minutes30EventButtonStatus.ToolTip}"
                        Command="{Binding Minutes30EventCommand}"                        
                        Margin="0,0,5,0"
                        FontSize="14"
                        Foreground="{Binding Minutes30EventButtonStatus.ButtonActive, Converter={StaticResource bool2RGBConverter}}"
                        HorizontalAlignment="Left"/>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource WindowButtonStyle}"
                        Content="{Binding Minutes45EventButtonStatus.Name}"
                        ToolTip="{Binding Minutes45EventButtonStatus.ToolTip}"
                        Command="{Binding Minutes45EventCommand}"                        
                        Margin="0,0,5,0"
                        FontSize="14"
                        Foreground="{Binding Minutes45EventButtonStatus.ButtonActive, Converter={StaticResource bool2RGBConverter}}"
                        HorizontalAlignment="Left"/>
                <Button Style="{StaticResource WindowButtonStyle}"
                        Content="{Binding Minutes60EventButtonStatus.Name}"
                        ToolTip="{Binding Minutes60EventButtonStatus.ToolTip}"
                        Command="{Binding Minutes60EventCommand}"                        
                        Margin="0,0,5,0"
                        FontSize="14"
                        Foreground="{Binding Minutes60EventButtonStatus.ButtonActive, Converter={StaticResource bool2RGBConverter}}"
                        HorizontalAlignment="Left"/>
                <Button Style="{StaticResource WindowButtonStyle}"
                        Content="{Binding Minutes120EventButtonStatus.Name}"
                        ToolTip="{Binding Minutes120EventButtonStatus.ToolTip}"
                        Command="{Binding Minutes120EventCommand}"                        
                        Margin="0,0,5,0"
                        FontSize="14"
                        Foreground="{Binding Minutes120EventButtonStatus.ButtonActive, Converter={StaticResource bool2RGBConverter}}"
                        HorizontalAlignment="Left"/>
            </StackPanel>            
        </StackPanel>
    </Grid>
</UserControl>
